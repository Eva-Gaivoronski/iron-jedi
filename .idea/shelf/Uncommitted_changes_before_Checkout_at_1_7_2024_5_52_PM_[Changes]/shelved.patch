Index: client/src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction App() {\r\n  const [quiz, setQuiz] = useState('');\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [result, setResult] = useState('');\r\n  const [correctAnswer, setCorrectAnswer] = useState('');\r\n  const [incorrectResponses, setIncorrectResponses] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      getQuiz();\r\n      setLoading(false);\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleQuizSubmit();\r\n  }, [selectedAnswer, correctAnswer, options, incorrectResponses]);\r\n\r\n  const getQuiz = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('https://opentdb.com/api.php?amount=1&difficulty=medium&type=multiple');\r\n      const data = await response.json();\r\n      const questionData = data.results[0];\r\n      setQuiz(questionData.question);\r\n      setCorrectAnswer(questionData.correct_answer);\r\n      const allOptions = shuffleArray(questionData.incorrect_answers.concat(questionData.correct_answer));\r\n      setOptions(allOptions);\r\n\r\n      const questionResponses = allOptions.map((option, index) => {\r\n        if (option === questionData.correct_answer) {\r\n          return 'Correct!';\r\n        } else {\r\n          return `${option} is incorrect.`;\r\n        }\r\n      });\r\n      setIncorrectResponses(questionResponses);\r\n\r\n      setLoading(false);\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log('Error fetching quiz:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateQuiz = (event) => {\r\n    event.preventDefault();\r\n    getQuiz();\r\n    setSelectedAnswer('');\r\n    setResult('');\r\n  };\r\n\r\n  const handleAnswerChange = (event) => {\r\n    setSelectedAnswer(event.target.value);\r\n  };\r\n\r\n  const handleQuizSubmit = () => {\r\n    if (selectedAnswer === '') {\r\n      setResult('~ Choose Wisely ~');\r\n      return;\r\n    }\r\n\r\n    const isCorrect = selectedAnswer === correctAnswer;\r\n    if (isCorrect) {\r\n      setResult('Correct!');\r\n      setTimeout(() => {\r\n        getQuiz();\r\n        setResult('');\r\n      }, 5000);\r\n    } else {\r\n      const currentIndex = options.indexOf(selectedAnswer);\r\n      const currentResponse = incorrectResponses[currentIndex];\r\n      setResult(currentResponse);\r\n    }\r\n  };\r\n\r\n  const shuffleArray = (array) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p></p>\r\n        <div>\r\n          {loading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            <>\r\n              <p dangerouslySetInnerHTML={{ __html: quiz }}></p>\r\n              <form>\r\n                {options.map((option, index) => (\r\n                  <div key={index}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      id={`option${index}`}\r\n                      name=\"quizOptions\"\r\n                      value={option}\r\n                      checked={selectedAnswer === option}\r\n                      onChange={handleAnswerChange}\r\n                    />\r\n                    <label\r\n                      htmlFor={`option${index}`}\r\n                      dangerouslySetInnerHTML={{ __html: option }}\r\n                    ></label>\r\n                  </div>\r\n                ))}\r\n              </form>\r\n              {result && (\r\n                <div style={{ marginTop: '20px' }}>\r\n                  <p>{result}</p>\r\n                </div>\r\n              )}\r\n              <div style={{ marginTop: '20px' }}>\r\n                <button onClick={handleGenerateQuiz}>Generate Quiz</button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/App.js b/client/src/App.js
--- a/client/src/App.js	
+++ b/client/src/App.js	
@@ -1,6 +1,6 @@
-import logo from './logo.svg';
 import './App.css';
 import React, { useState, useEffect } from 'react';
+import Board from'./components/board';
 
 function App() {
   const [quiz, setQuiz] = useState('');
@@ -65,22 +65,27 @@
 
   const handleQuizSubmit = () => {
     if (selectedAnswer === '') {
-      setResult('~ Choose Wisely ~');
       return;
     }
 
     const isCorrect = selectedAnswer === correctAnswer;
+
+    // Display correct or incorrect message immediately
     if (isCorrect) {
       setResult('Correct!');
-      setTimeout(() => {
-        getQuiz();
-        setResult('');
-      }, 5000);
     } else {
       const currentIndex = options.indexOf(selectedAnswer);
       const currentResponse = incorrectResponses[currentIndex];
       setResult(currentResponse);
     }
+
+    // Load the next question after 5 seconds for correct answers
+    setTimeout(() => {
+      if (isCorrect) {
+        getQuiz();
+        setResult('');
+      }
+    }, isCorrect ? 5000 : 0);
   };
 
   const shuffleArray = (array) => {
@@ -94,7 +99,12 @@
   return (
     <div className="App">
       <header className="App-header">
-        <img src={logo} className="App-logo" alt="logo" />
+        <div className="header-buttons">
+          <button className="login-button">Login</button>
+          <button className="register-button">Register</button>
+          <button className= "leaderBoard-button">Leader Board</button>
+        </div>
+
         <p></p>
         <div>
           {loading ? (
@@ -126,7 +136,7 @@
                 </div>
               )}
               <div style={{ marginTop: '20px' }}>
-                <button onClick={handleGenerateQuiz}>Generate Quiz</button>
+                <button onClick={handleGenerateQuiz}>Trivia Explosion!</button>
               </div>
             </>
           )}
Index: client/src/components/board.js
===================================================================
diff --git a/client/src/components/board.js b/client/src/components/board.js
new file mode 100644
--- /dev/null	
+++ b/client/src/components/board.js	
@@ -0,0 +1,6 @@
+import React from 'react'
+export default function Board(){
+    return(
+    <div>Board</div>
+    )
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"843f8013-a532-4783-ad37-5c6a94f5ae86\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZS5sEXvZAKePLdxEqFpzIDa0cl\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Kevin/Desktop/Launchcode Class files/Java Projects/assignment-one&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;configurable.group.appearance&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"843f8013-a532-4783-ad37-5c6a94f5ae86\" name=\"Changes\" comment=\"\" />\r\n      <created>1702402851272</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702402851272</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,8 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="843f8013-a532-4783-ad37-5c6a94f5ae86" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/client/src/components/board.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/client/src/App.css" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/App.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/client/src/App.js" beforeDir="false" afterPath="$PROJECT_DIR$/client/src/App.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -19,7 +21,26 @@
     </projectState>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="JoshuaAllen" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
+  "lastFilter": {
+    "state": "OPEN",
+    "assignee": "allenjosh1983"
+  }
+}]]></component>
+  <component name="GithubPullRequestsUISettings">
+    <option name="selectedUrlAndAccountId">
+      <UrlAndAccount>
+        <option name="accountId" value="6eaaa2cd-19f9-464f-bd86-75963629b343" />
+        <option name="url" value="https://github.com/Eva-Gaivoronski/iron-jedi.git" />
+      </UrlAndAccount>
+    </option>
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -38,7 +59,7 @@
     &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;JoshuaAllen&quot;,
     &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
     &quot;last_opened_file_path&quot;: &quot;C:/Users/Kevin/Desktop/Launchcode Class files/Java Projects/assignment-one&quot;,
     &quot;settings.editor.selected.configurable&quot;: &quot;configurable.group.appearance&quot;
@@ -55,4 +76,32 @@
     </task>
     <servers />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="OPEN_GENERIC_TABS">
+      <map>
+        <entry key="544a3ee8-dfd2-4e35-b91b-3aad0c35231f" value="TOOL_WINDOW" />
+      </map>
+    </option>
+    <option name="TAB_STATES">
+      <map>
+        <entry key="544a3ee8-dfd2-4e35-b91b-3aad0c35231f">
+          <value>
+            <State>
+              <option name="FILTERS">
+                <map>
+                  <entry key="range">
+                    <value>
+                      <list>
+                        <option value="origin/Iryna's_branch..JoshuaAllen" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
 </project>
\ No newline at end of file
